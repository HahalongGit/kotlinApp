if (isRunAlone.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        if (isRunAlone.toBoolean()) {//独立运行添加applicationId
            applicationId "com.digua.base"
        }
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    sourceSets {
//        main {
//            if (isRunAlone.toBoolean()) {//根据是否独立运行设置不同的AndroidManifest，独立运行需要启动页
//                //独立运行的AndroidManifest
//                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
//            } else {
//                manifest.srcFile 'src/main/AndroidManifest.xml'
//            }
//        }
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //项目基本依赖库
    api 'androidx.appcompat:appcompat:1.0.2'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'androidx.annotation:annotation:1.1.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    //material
    api 'com.google.android.material:material:1.0.0'

    //项目测试依赖
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api project(':componentbase')

    //************所有module的公共基础依赖全部放在base library的中 使用api 配置*************//

    //kotlin相关依赖
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    api 'androidx.core:core-ktx:1.0.2'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version" //反射用到的库

    //网络请求应该单独一个模块
    api 'com.squareup.okhttp3:okhttp:3.8.1'
    api 'com.squareup.retrofit2:retrofit:2.6.0'
    api 'com.squareup.retrofit2:converter-gson:2.6.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.6.0'
    api 'io.reactivex.rxjava2:rxjava:2.1.2'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // lifecycle 依赖
    def lifecycle_version = "2.3.1"
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //gson
    api 'com.google.code.gson:gson:2.2.4'
    //数据库操作
    api 'org.litepal.android:core:1.6.1'

    //图片加载
    api 'com.github.bumptech.glide:glide:3.7.0' //4.9.0

    // google Eastpermission
    api 'pub.devrel:easypermissions:2.0.1'

    //阿里 路由库
    api 'com.alibaba:arouter-api:1.5.1'

}
